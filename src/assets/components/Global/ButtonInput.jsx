import { useMediaQuery } from "react-responsive"
import { isLaptop } from "../../config"
import { useState } from "react"

const ButtonInput = (props) => {
    const { text, sty = "", link = "", outline = false, onPress = () => { }, iconCross, iconWhats, load } = props
    const isLaptopQuery = useMediaQuery(isLaptop)
    const [isHovered, setIsHovered] = useState(false)
    const handleMouseEnter = () => setIsHovered(true)
    const handleMouseLeave = () => setIsHovered(false)
    return <>
        <button
            onClick={onPress}
            onMouseEnter={handleMouseEnter}
            onMouseLeave={handleMouseLeave}
            // href={link} 
            type="submit"
            disabled={load}
            className={`transition-all-seg title-h4-small ${outline ? 'btn-outline-global' : 'btn-global'} ${load && '!bg-black !cursor-not-allowed'} ${sty}`}>
            {iconCross && isLaptopQuery && <svg xmlns="http://www.w3.org/2000/svg" width="14" height="16" viewBox="0 0 14 16" fill="none">
                <rect x="-0.000976562" y="6.34277" width="13.9661" height="2.37862" fill={!isHovered ? 'white' : '#FDB200'} />
                <rect x="8.08496" width="15.0646" height="2.20517" transform="rotate(90 8.08496 0)" fill={!isHovered ? 'white' : '#FDB200'} />
            </svg>}
            {iconCross && !isLaptopQuery && <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" viewBox="0 0 8 8" fill="none">
                <rect y="3.36841" width="7.41665" height="1.26316" fill={!isHovered ? 'white' : '#FDB200'} />
                <rect x="4.29407" width="8" height="1.17105" transform="rotate(90 4.29407 0)" fill={!isHovered ? 'white' : '#FDB200'} />
            </svg>}
            {iconWhats && isLaptopQuery && <svg xmlns="http://www.w3.org/2000/svg" width="25" height="24" viewBox="0 0 25 24" fill="none">
                <g mask="url(#mask0_964_1289)">
                    <path d="M14.29 2.63999L13.72 2.55999C12.0069 2.31265 10.2588 2.55734 8.67954 3.26555C7.10023 3.97376 5.75476 5.11631 4.8 6.55999C3.78416 7.93997 3.17859 9.57873 3.05298 11.2877C2.92737 12.9966 3.28684 14.7063 4.09 16.22C4.1722 16.3717 4.22337 16.5382 4.24054 16.7099C4.25771 16.8816 4.24053 17.055 4.19 17.22C3.78 18.63 3.4 20.05 3 21.54L3.5 21.39C4.85 21.03 6.2 20.67 7.55 20.34C7.83494 20.2807 8.13112 20.3086 8.4 20.42C9.6112 21.0111 10.9348 21.3363 12.282 21.3738C13.6293 21.4112 14.9689 21.1601 16.2111 20.6372C17.4533 20.1143 18.5692 19.3318 19.4841 18.3421C20.399 17.3524 21.0915 16.1785 21.5153 14.8991C21.9392 13.6198 22.0844 12.2645 21.9414 10.9244C21.7983 9.58426 21.3703 8.29023 20.6859 7.12914C20.0016 5.96806 19.0769 4.96678 17.9737 4.19251C16.8706 3.41824 15.6146 2.88889 14.29 2.63999ZM16.81 15.76C16.4466 16.0854 16.0034 16.3086 15.5256 16.407C15.0478 16.5054 14.5524 16.4753 14.09 16.32C11.9946 15.73 10.1766 14.4152 8.96 12.61C8.49529 11.9715 8.1217 11.2715 7.85 10.53C7.70285 10.0998 7.67632 9.63746 7.77327 9.19322C7.87023 8.74899 8.08698 8.33978 8.4 8.00999C8.55239 7.8155 8.75981 7.67142 8.99526 7.5965C9.2307 7.52159 9.48325 7.51932 9.72 7.58999C9.92 7.63999 10.06 7.92999 10.24 8.14999C10.386 8.56299 10.557 8.96699 10.75 9.35999C10.8964 9.56049 10.9576 9.81079 10.9201 10.0562C10.8826 10.3017 10.7496 10.5223 10.55 10.67C10.1 11.07 10.17 11.4 10.49 11.85C11.1974 12.8692 12.1736 13.6722 13.31 14.17C13.63 14.31 13.87 14.34 14.08 14.01C14.17 13.88 14.29 13.77 14.39 13.65C14.97 12.92 14.79 12.93 15.71 13.33C16.003 13.453 16.287 13.597 16.56 13.76C16.83 13.92 17.24 14.09 17.3 14.33C17.3577 14.5904 17.3425 14.8616 17.2561 15.1139C17.1696 15.3662 17.0153 15.5897 16.81 15.76Z" fill={!isHovered ? 'white' : '#FDB200'} />
                </g>
            </svg>}
            {iconWhats && !isLaptopQuery && <svg xmlns="http://www.w3.org/2000/svg" width="18" height="17" viewBox="0 0 25 24" fill="none">
                <g mask="url(#mask0_964_1289)">
                    <path d="M14.29 2.63999L13.72 2.55999C12.0069 2.31265 10.2588 2.55734 8.67954 3.26555C7.10023 3.97376 5.75476 5.11631 4.8 6.55999C3.78416 7.93997 3.17859 9.57873 3.05298 11.2877C2.92737 12.9966 3.28684 14.7063 4.09 16.22C4.1722 16.3717 4.22337 16.5382 4.24054 16.7099C4.25771 16.8816 4.24053 17.055 4.19 17.22C3.78 18.63 3.4 20.05 3 21.54L3.5 21.39C4.85 21.03 6.2 20.67 7.55 20.34C7.83494 20.2807 8.13112 20.3086 8.4 20.42C9.6112 21.0111 10.9348 21.3363 12.282 21.3738C13.6293 21.4112 14.9689 21.1601 16.2111 20.6372C17.4533 20.1143 18.5692 19.3318 19.4841 18.3421C20.399 17.3524 21.0915 16.1785 21.5153 14.8991C21.9392 13.6198 22.0844 12.2645 21.9414 10.9244C21.7983 9.58426 21.3703 8.29023 20.6859 7.12914C20.0016 5.96806 19.0769 4.96678 17.9737 4.19251C16.8706 3.41824 15.6146 2.88889 14.29 2.63999ZM16.81 15.76C16.4466 16.0854 16.0034 16.3086 15.5256 16.407C15.0478 16.5054 14.5524 16.4753 14.09 16.32C11.9946 15.73 10.1766 14.4152 8.96 12.61C8.49529 11.9715 8.1217 11.2715 7.85 10.53C7.70285 10.0998 7.67632 9.63746 7.77327 9.19322C7.87023 8.74899 8.08698 8.33978 8.4 8.00999C8.55239 7.8155 8.75981 7.67142 8.99526 7.5965C9.2307 7.52159 9.48325 7.51932 9.72 7.58999C9.92 7.63999 10.06 7.92999 10.24 8.14999C10.386 8.56299 10.557 8.96699 10.75 9.35999C10.8964 9.56049 10.9576 9.81079 10.9201 10.0562C10.8826 10.3017 10.7496 10.5223 10.55 10.67C10.1 11.07 10.17 11.4 10.49 11.85C11.1974 12.8692 12.1736 13.6722 13.31 14.17C13.63 14.31 13.87 14.34 14.08 14.01C14.17 13.88 14.29 13.77 14.39 13.65C14.97 12.92 14.79 12.93 15.71 13.33C16.003 13.453 16.287 13.597 16.56 13.76C16.83 13.92 17.24 14.09 17.3 14.33C17.3577 14.5904 17.3425 14.8616 17.2561 15.1139C17.1696 15.3662 17.0153 15.5897 16.81 15.76Z" fill={!isHovered ? 'white' : '#FDB200'} />
                </g>
            </svg>}
            {text}
        </button>
    </>
}

export default ButtonInput